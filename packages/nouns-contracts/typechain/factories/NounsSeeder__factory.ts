/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { NounsSeeder } from "../NounsSeeder";

export class NounsSeeder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NounsSeeder> {
    return super.deploy(overrides || {}) as Promise<NounsSeeder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NounsSeeder {
    return super.attach(address) as NounsSeeder;
  }
  connect(signer: Signer): NounsSeeder__factory {
    return super.connect(signer) as NounsSeeder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NounsSeeder {
    return new Contract(address, _abi, signerOrProvider) as NounsSeeder;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nounId",
        type: "uint256",
      },
      {
        internalType: "contract INounsDescriptor",
        name: "descriptor",
        type: "address",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610615806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063422e2e9914610030575b600080fd5b61004361003e3660046104fd565b61009a565b6040516100919190815165ffffffffffff9081168252602080840151821690830152604080840151821690830152606080840151821690830152608092830151169181019190915260a00190565b60405180910390f35b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915282600a14156100ff57506040805160a0810182526001808252602082018190526000928201839052606082015260808101919091526104de565b826007141561013957506040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526104de565b600061014660014361055e565b60408051914060208301528101859052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201207feba8180600000000000000000000000000000000000000000000000000000000845291519193506001926002928392600092849273ffffffffffffffffffffffffffffffffffffffff8b169263eba818069260048082019391829003018186803b1580156101fd57600080fd5b505afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906104e4565b61023f919061055e565b905060008460ff168873ffffffffffffffffffffffffffffffffffffffff16634daebac26040518163ffffffff1660e01b815260040160206040518083038186803b15801561028d57600080fd5b505afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c591906104e4565b6102cf919061055e565b905060008460ff168973ffffffffffffffffffffffffffffffffffffffff1663cc2aa0916040518163ffffffff1660e01b815260040160206040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906104e4565b61035f919061055e565b905060008660ff168a73ffffffffffffffffffffffffffffffffffffffff16634479cef26040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e591906104e4565b6103ef919061055e565b90506040518060a001604052808665ffffffffffff1681526020018760ff168660308c901c65ffffffffffff166104269190610575565b6104309190610546565b65ffffffffffff1681526020018860ff168560608c901c65ffffffffffff166104599190610575565b6104639190610546565b65ffffffffffff1681526020018760ff168460908c901c65ffffffffffff1661048c9190610575565b6104969190610546565b65ffffffffffff1681526020018860ff168360c08c901c65ffffffffffff166104bf9190610575565b6104c99190610546565b65ffffffffffff169052985050505050505050505b92915050565b6000602082840312156104f657600080fd5b5051919050565b6000806040838503121561051057600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461053b57600080fd5b809150509250929050565b60008219821115610559576105596105b0565b500190565b600082821015610570576105706105b0565b500390565b6000826105ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122072b26938bc7c7074b288eb90d5d4ebca79fe0517a2d80968d3f29fb5216d69b464736f6c63430008060033";
